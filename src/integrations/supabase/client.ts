// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = "https://nutlcbnruabjsxecqpnd.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im51dGxjYm5ydWFianN4ZWNxcG5kIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU1MTcwOTgsImV4cCI6MjA3MTA5MzA5OH0.K_rfijLK9e3EbDxU4uddtY0sUMUvtH-yHNEbW8Ohp5c";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Supabase client configurado para usar cookies seguros - ETAPA 1
export const supabase = createClient(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: {
      getItem: (key: string) => {
        if (typeof window === 'undefined') return null;
        try {
          // Tentar cookies primeiro, fallback para localStorage
          const cookieValue = document.cookie
            .split('; ')
            .find(row => row.startsWith(`${key}=`))
            ?.split('=')[1];
          
          return cookieValue ? decodeURIComponent(cookieValue) : localStorage.getItem(key);
        } catch {
          return null;
        }
      },
      setItem: (key: string, value: string) => {
        if (typeof window === 'undefined') return;
        try {
          // Usar cookies seguros para sessão
          const expires = new Date();
          expires.setDate(expires.getDate() + 7); // 7 dias
          
          document.cookie = `${key}=${encodeURIComponent(value)}; expires=${expires.toUTCString()}; path=/; secure; samesite=lax`;
          
          // Fallback para localStorage
          localStorage.setItem(key, value);
        } catch (error) {
          console.warn('Erro ao salvar sessão:', error);
          localStorage.setItem(key, value);
        }
      },
      removeItem: (key: string) => {
        if (typeof window === 'undefined') return;
        try {
          // Remover do cookie
          document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;
          // Remover do localStorage
          localStorage.removeItem(key);
        } catch (error) {
          console.warn('Erro ao remover sessão:', error);
        }
      }
    },
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'implicit'
  },
  global: {
    headers: {
      'X-Client-Info': 'lovable-dashboard'
    }
  }
});