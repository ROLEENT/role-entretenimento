// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = "https://nutlcbnruabjsxecqpnd.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im51dGxjYm5ydWFianN4ZWNxcG5kIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU1MTcwOTgsImV4cCI6MjA3MTA5MzA5OH0.K_rfijLK9e3EbDxU4uddtY0sUMUvtH-yHNEbW8Ohp5c";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Criar cliente base
const supabaseClient = createClient<any>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: typeof window !== 'undefined' ? localStorage : undefined,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Fun√ß√£o para atualizar headers dinamicamente
const updateAdminHeaders = () => {
  if (typeof window === 'undefined') return;
  
  try {
    const adminSession = localStorage.getItem('admin_session');
    if (adminSession) {
      const adminData = JSON.parse(adminSession);
      if (adminData?.email) {
        // Atualizar headers no cliente existente
        supabaseClient.rest.headers['x-admin-email'] = adminData.email;
        console.log('‚úÖ Headers atualizados com admin email:', adminData.email);
      }
    } else {
      // Remover header se n√£o h√° sess√£o
      delete supabaseClient.rest.headers['x-admin-email'];
      console.log('üóëÔ∏è Headers de admin removidos - sem sess√£o');
    }
  } catch (error) {
    console.error('Error updating admin headers:', error);
    delete supabaseClient.rest.headers['x-admin-email'];
  }
};

// Definir headers inicial
updateAdminHeaders();

// Proxy para interceptar todas as opera√ß√µes e garantir headers atualizados
export const supabase = new Proxy(supabaseClient, {
  get(target, prop) {
    // Atualizar headers antes de qualquer opera√ß√£o
    updateAdminHeaders();
    
    const value = target[prop as keyof typeof target];
    return typeof value === 'function' ? value.bind(target) : value;
  }
});